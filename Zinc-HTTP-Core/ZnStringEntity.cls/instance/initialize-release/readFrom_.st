readFrom: stream	| buffer totalRead read readStream stringStream total |	total := self contentLength.	readStream := total ifNotNil: [ ZnLimitedReadStream on: stream limit: total ] ifNil: [ stream ].	buffer := String new: (ZnUtils streamingBufferSize min: (total ifNil: [ ZnUtils streamingBufferSize ])).	stringStream := (total ifNil: [ String new ] ifNotNil: [ String new: total ]) writeStream.	totalRead := 0.	self initializeEncoder.	[ readStream atEnd ] whileFalse: [		read := encoder readInto: buffer startingAt: 1 count: buffer size fromStream: readStream.		stringStream next: read putAll: buffer startingAt: 1.		totalRead := totalRead + read.		totalRead > ZnConstants maximumEntitySize			ifTrue: [ ZnEntityTooLarge signal ].		ZnUtils signalProgress: totalRead total: total ].	self string: stringStream contents