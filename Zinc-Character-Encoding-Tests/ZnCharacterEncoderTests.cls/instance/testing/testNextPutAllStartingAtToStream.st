testNextPutAllStartingAtToStream	| encoder |	encoder := ZnUTF8Encoder new.	#( 'ccc' 'ÁÁÁ' 'c' 'Á' 'Ác' 'cÁ' 'ÁÁ' ) do: [ :each |		#( ( '' '' ) ( 'ABC' '' ) ( '' 'ABC' ) ( 'ABC' 'ABC' ) 			( 'AÈC' '' ) ( '' 'AËC' ) ( 'AÈC' 'AËC' ) 			( 'AXC' 'AËC' ) ( 'AÈC' 'AXC' ) 			( 'PRE' 'Á' ) ) do: [ :extra |				| prefix postfix string bytes |				prefix := extra first.				postfix := extra last.				string := prefix, each, postfix.				bytes := ByteArray streamContents: [ :out |					encoder next: each size putAll: string startingAt: prefix size + 1 toStream: out ].				self assert: (encoder decodeBytes: bytes) equals: each ] ]