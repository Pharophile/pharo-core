testStoreAndPopLiteralVariableBytecode	| selector methodNode scanner did |	selector := (methodNode := self compile2methodNode: 'storeAndPopLiteralVariableBytecode ClassVar := nil') selector.	scanner := InstructionStream on: methodNode method.	self		assert: ((did := scanner nextInstruction; peekInstruction) selector == #popIntoLiteralVariable:				and: [did arguments first = (#ClassVar -> nil)])		description: 'Failed ' , selector